#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 72016 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:189), pid=16064, tid=9060
#
# JRE version: OpenJDK Runtime Environment Temurin-17.0.8.1+1 (17.0.8.1+1) (build 17.0.8.1+1)
# Java VM: OpenJDK 64-Bit Server VM Temurin-17.0.8.1+1 (17.0.8.1+1, mixed mode, tiered, compressed oops, compressed class ptrs, parallel gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: --add-modules=ALL-SYSTEM --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/sun.nio.fs=ALL-UNNAMED -Declipse.application=org.eclipse.jdt.ls.core.id1 -Dosgi.bundles.defaultStartLevel=4 -Declipse.product=org.eclipse.jdt.ls.core.product -Djava.import.generatesMetadataFilesAtProjectRoot=false -Dfile.encoding=utf8 -XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -Xlog:disable -javaagent:c:\Users\dayan\.vscode\extensions\redhat.java-1.22.1-win32-x64\lombok\lombok-1.18.28.jar -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=c:\Users\dayan\AppData\Roaming\Code\User\workspaceStorage\0b5e52b29039e0d816c6c08d15b953d9\redhat.java -Daether.dependencyCollector.impl=bf c:\Users\dayan\.vscode\extensions\redhat.java-1.22.1-win32-x64\server\plugins\org.eclipse.equinox.launcher_1.6.500.v20230717-2134.jar -configuration c:\Users\dayan\AppData\Roaming\Code\User\globalStorage\redhat.java\1.22.1\config_win -data c:\Users\dayan\AppData\Roaming\Code\User\workspaceStorage\0b5e52b29039e0d816c6c08d15b953d9\redhat.java\jdt_ws

Host: Intel(R) Core(TM) i5-2410M CPU @ 2.30GHz, 4 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.3393)
Time: Fri Sep 29 20:28:53 2023 Hora oficial do Brasil elapsed time: 0.413133 seconds (0d 0h 0m 0s)

---------------  T H R E A D  ---------------

Current thread (0x000001dec247dee0):  JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=9060, stack(0x000000a841c00000,0x000000a841d00000)]


Current CompileTask:
C2:    413  155       4       java.util.HashMap::putVal (300 bytes)

Stack: [0x000000a841c00000,0x000000a841d00000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x678b0a]
V  [jvm.dll+0x835e84]
V  [jvm.dll+0x83762e]
V  [jvm.dll+0x837c93]
V  [jvm.dll+0x24746f]
V  [jvm.dll+0xac20c]
V  [jvm.dll+0xac7dc]
V  [jvm.dll+0x365c52]
V  [jvm.dll+0x3301a1]
V  [jvm.dll+0x32f64a]
V  [jvm.dll+0x219bf1]
V  [jvm.dll+0x219011]
V  [jvm.dll+0x1a534d]
V  [jvm.dll+0x228d8a]
V  [jvm.dll+0x226dcc]
V  [jvm.dll+0x7ec09b]
V  [jvm.dll+0x7e64ca]
V  [jvm.dll+0x677955]
C  [ucrtbase.dll+0x21bb2]
C  [KERNEL32.DLL+0x17344]
C  [ntdll.dll+0x526b1]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x000001dec25541b0, length=11, elements={
0x000001dea95ca390, 0x000001debd3de370, 0x000001dec2448c60, 0x000001dec2477c50,
0x000001dec24789e0, 0x000001dec247b770 